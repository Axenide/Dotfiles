$float: $spacing * 0.2;

@mixin panel_button($flat: false, $reactive: true) {
    all: unset;
    
    @if $bar_style =='separated' {
        transition: $transition;

        >* {
            @include floating_widget;
            border-radius: $radii;
            margin: $wm_gaps $float;
            transition: $transition;
        }

        &:hover>* {
            color: $hover_fg;

            @if $drop_shadow {
                box-shadow: 0 0 min(6px, $spacing/2) 0 $shadow,
                    inset 0 0 0 99px $hover;
            }

            @else {
                box-shadow: inset 0 0 0 99px $hover;
            }
        }

        &:active>*,
        &.active>* {

            label,
            image {
                color: $accent_fg;
            }

            background-image: $active_gradient;
            background-color: $accent;
        }
    }

    @else {
        @include accs_button($flat, $reactive);

        >* {
            margin: $float;
        }
    }

    label {
        font-weight: bold;
    }

    image {
        font-size: $font-size * 1.2;
    }

    >* {
        padding: .3em .5em;
    }
}

.panel {
    .cpu {
        padding-left: $spacing/3;
        color: $accent;
    }

    .ram {
        color: $yellow;
    }

    .temp {
        padding-right: $spacing/3;
        color: $magenta;
    }

    .system-resources-box {
        margin: $spacing/2.5;
        background-color: $bg_color;
        font-size: 1em;
        @if $bar_style =='separated' {
            padding: $wm_gaps $wm_gaps+5px $wm_gaps $wm_gaps+5px;
            border-radius: max($radii - $border_width, 0);
            margin-left: $spacing/4;
            margin-right: $spacing/4;
            
        }
        

        .circular-progress {
            min-height: $font_size * 1.35;
            min-width: $font_size * 1.35;
            font-size: $font_size/4.5;
            background-color: lighten($bg_color, $amount: 8);
        }
    }


    @if $bar_style =='normal' {
        background-color: $bg_color;
    }

    @if not $screen_corners and $bar_style =='normal' {
        @if $layout =='bottombar' {
            border-top: $border;
        }

        @else {
            border-bottom: $border;
        }
    }

    @if $bar_style =='floating' {
        @include floating_widget;
        margin: $wm_gaps;
        padding: 0;
        border: $bar_border;
        border-radius: $radii;
    }

    @if $bar_style =='separated' {
        >.end>button:last-child>* {
            margin-right: $wm_gaps;
        }

        >.start>button:first-child>* {
            margin-left: $wm_gaps;
        }
    }

    .panel-button {
        .clock {
            font-size: $font_size*1.1;
        }
        @include panel_button($flat: true);
    }

    separator {
        @if $bar_style =='separated' {
        }
        @else {
        background-color: lighten($bg_color, $amount: 8);
        border-radius: $radii;
        min-height: 5px;
        min-width: 5px;
        }
    }

    .quicksettings>box>* {
        font-size: $font_size;
        margin: 0 $spacing/2;

        &:last-child {
            margin-right: 0;
        }

        &:first-child {
 
            margin-left: 0;
        }
    }

    .overview {
        .font-icon {
            font-size: $font_size*1.3;
        }
        label {
            color: transparentize($accent, 0.2);
        }

        &:hover label {
            color: $accent;
        }

        &:active label,
        &.active label {
            color: $accent_fg;
        }
    }

    .powermenu,
    .recorder {
        image {
            color: transparentize($red, 0.3);
        }

        &:hover image {
            color: transparentize($red, 0.15);
        }

        &:active image {
            color: $red;
        }
    }

    /* stylelint-disable-next-line selector-not-notation */
    .quicksettings:not(.active):not(:active) {
        .bluetooth {
            color: $blue;
        }

        .battery {
            &.low {
                color: $red;
            }

            &.charged,
            &.charging {
                color: $green;
            }
        }
    }

    .media {
        &.spotify image {
            color: $green;
        }

        &.firefox image {
            color: $orange;
        }

        &.mpv image {
            color: $magenta;
        }
    }

    .notifications {
        image {
            color: $yellow;
        }
    }

    .battery-bar {
        box {
            padding-left: $spacing/3;
            padding-right: $spacing/3;
        }
        image {
            margin-right: $spacing/2;
        }

        .font-icon {
            font-size: $font_size*1.3;
            margin-right: $spacing;

        }

        label {
            font-size: $font_size*1.1;
            margin-left: $spacing/1.5;
            
        }

        levelbar trough {
            @include widget;
            min-width: $font_size*4.5;
            min-height: $font_size/1.1;
            border-color: transparent;
            background-color: transparent;
            border-radius: $radii/2;

            block {
                border-radius: $radii/2;
                background-color: lighten($bg_color, $amount: 8);
            }


            block.filled {
                border-radius: $radii/2;
                background-image: $active_gradient;
              
            }
        }

        @mixin color($color) {

            image,
            label {
                color: $fg_color;
            }

            block.filled {
                background-image: linear-gradient(to right, $color, lighten($color, 6%));
            }
        }

        .medium {
            @include color($yellow)
        }

        .low {
            @include color($red)
        }

        .charging {
            @include color($green)
        }

        &:active {
            @include color($accent_fg)
        }
    }

    .workspaces {
        >* {
            padding: 0;
        }

        .eventbox {
            transition: $transition;

            @if $bar_style =='separated' {
                border-radius: max($radii - $border_width, 0);

                &:hover {
                    background-color: $hover;
                }
            }

            @else {
                @include button($flat: true);
            }
        }

        button {
            all: unset;

            .indicator {
                font-size: 0em;
                min-width: $workspace_bttn_size;
                min-height: $workspace_bttn_size;
                border-radius: $font_size;
                margin: 0 $spacing/2;
                transition: $transition/2;
                background-color: transparentize($fg_color, 0.8);
            }

            &:last-child .indicator {
                margin-right: $spacing;
            }

            &:first-child .indicator {
                margin-left: $spacing;
            }

            &.occupied .indicator {
                background-color: transparentize($fg_color, 0.2);
            }

            &:hover .indicator {
                box-shadow: inset 0 0 0 10px transparentize($fg_color, 0.8);
            }

            &.active .indicator,
            &:active .indicator {
                background-color: $accent;
            }

            &.active .indicator {
                min-width: $font_size*2.5
            }
        }
    }
}